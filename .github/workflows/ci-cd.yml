name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
    paths-ignore:
      - 'README.md'
      - 'platform_sdk/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint code
        run: flake8 .

      - name: Test code
        run: pytest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    env:
      ENVIRONMENT: ${{ github.ref_name == 'main' && 'prod' || 'dev' }}
      FUNCTION_ZIP: ${{ github.ref_name == 'main' && 'function-prod.zip' || 'function-dev.zip' }}
      TFSTATE_BUCKET: "next-gate-tech-terraform-state"
      TFSTATE_KEY: "terraform/state/${{ github.ref_name == 'main' && 'prod' || 'dev' }}/terraform.tfstate"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'

      - name: Create deployment package
        run: |
          zip -r $FUNCTION_ZIP main.py

      - name: Verify deployment package content
        run: |
          echo "Verifying contents of $FUNCTION_ZIP"
          unzip -l $FUNCTION_ZIP || (echo "Invalid zip file"; exit 1)
          unzip -p $FUNCTION_ZIP main.py || (echo "Cannot extract main.py from zip file"; exit 1)

      - name: Upload function.zip to GCS
        run: |
          gsutil cp $FUNCTION_ZIP gs://next-gate-tech-project-functions/$FUNCTION_ZIP

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${TFSTATE_BUCKET}" \
            -backend-config="prefix=${TFSTATE_KEY}"
        working-directory: terraform

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -var "environment=$ENVIRONMENT" -var "function_zip_file=$FUNCTION_ZIP"
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -var "environment=$ENVIRONMENT" -var "function_zip_file=$FUNCTION_ZIP"
        working-directory: terraform

      - name: Print the list of active Cloud Functions trigger URLs using gcloud
        run: gcloud functions list --format="value(httpsTrigger.url)"